<?php

namespace Utilisateur\UtilisateurBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * LitigeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UtilisateurRepository extends EntityRepository
{
    public function byCompetence($competence){
        $req = $this->createQueryBuilder('t')->join('t.competence', 'u', 'WITH', 'u.nomCompetence = :id')
                    ->setParameter('id', $competence);
        return $req->getQuery()->getResult();
    }
    
    public function recherche($chaine){
        $req = $this->createQueryBuilder('p')
                    ->select('p')
                    ->where('p.etatUser like :chaine')
                    ->orderBy('p.id')
                    ->setParameter('chaine', '%'.$chaine.'%');
        return $req->getQuery()->getResult();
    }

    public function recherchezip($chaine){
        $req = $this->createQueryBuilder('p')
                    ->select('p')
                    ->where('p.codeUser like :chaine')
                    ->orderBy('p.id')
                    ->setParameter('chaine', '%'.$chaine.'%');
        return $req->getQuery()->getResult();
    }

    public function findbydesc(){
        $req = $this->createQueryBuilder('p')
                    ->select('p')
                    ->orderBy('p.dateAjoutUser', 'DESC');
        return $req->getQuery()->getResult();
    }

    public function findbyasc(){
        $req = $this->createQueryBuilder('p')
                    ->select('p')
                    ->orderBy('p.dateAjoutUser', 'ASC');
        return $req->getQuery()->getResult();
    }

    public function findByException($user){
        
        $req = $this->createQueryBuilder('p')
                    ->select('p')
                    ->where('p.id !=:user')
                    ->orderBy('p.id')
                    ->setParameter('user', $user);
        return $req->getQuery()->getResult();
    }
}
